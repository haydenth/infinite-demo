The Challenge: Cross-Border Payment API

Build a REST API that demonstrates USD → multi-currency payout flow with a fee engine.

Requirements:
- Payment Flow: Accept USD, payout in user's chosen currency
- Fee Engine: Calculate fees based on amount + destination
- Mock Integrations:
  - Onramp: Mock USD collection (Stripe/Circle/onramp provider of you choice)
  - Offramp: Mock stablecoin → local currency payout
  - Idempotency: Handle duplicate payment requests
  - Events: Basic webhook handling for async updates
  - Deliverables:
    - Working code (your preferred language)
    - README with setup instructions
    - Short notes on production scaling approach

We're Evaluating:
- API design and payment flow orchestration
- Understanding of onramp/offramp architecture
- How you'd handle this at scale
- Code quality and AI tool usage

Files:
- offramp-service: this is the mocked out offramp service
- offramp-service/README.md: details on how to use the mocked offramp service
- FINANCE.md: details about the challenge requirements and evaluation criteria

Testing:
- Don't run flask yourself, it's all in the docker-compose.yml and I will run
- Don't worry about testing, I will take care of testing
